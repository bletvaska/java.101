<?xml version="1.0" encoding="UTF-8"?>

<ruleset name="Text game ruleset"
    xmlns="http://pmd.sf.net/ruleset/2.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 http://pmd.sourceforge.net/ruleset_2_0_0.xsd"
    xsi:noNamespaceSchemaLocation="http://pmd.sourceforge.net/ruleset_2_0_0.xsd">

  <description>
    This ruleset is for checking of nasty stuff in student's project code.
  </description>

  <!-- Here are some rules we'll specify one at a time -->

  <rule ref="rulesets/java/basic.xml/ReturnFromFinallyBlock" message="Nepouzívajte príkaz ''return'' vo vnútri bloku ''finally''." />
  <rule ref="rulesets/java/basic.xml/UnconditionalIfStatement" message="Nepouzívajte príkazy ''if'', ktoré sú vzdy pravdivé alebo vzdy nepravdivé (lebo tento je taký)." />
  <rule ref="rulesets/java/basic.xml/CollapsibleIfStatements" message="Spojte nasledujúce dva za sebou idúce ''if'' príkazy do jedného (podmienky zlúcite logickým operátorom &amp;&amp;)" />

  <rule ref="rulesets/java/codesize.xml/ExcessiveMethodLength" message="Metóda obsahuje viac ako 99 príkazov. Skúste redukovat jej veľkost vytvorením pomocných metód." />
  <rule ref="rulesets/java/codesize.xml/ExcessiveParameterList" message="Nepouzívajte viac ako 9 parametrov metódy. Skúste tie parametre zapúzdrit do objektu, prípadne poľa." />
  <rule ref="rulesets/java/codesize.xml/ExcessiveClassLength" message="Obmedzte pocet metód/príkazov v triede. Trieda musí mat menej ako 1000 riadkov." />
  <rule ref="rulesets/java/codesize.xml/ExcessivePublicCount" message="Trieda nesmie mat viac ako 44 verejných dátových clenov/metód. Prehodnotte, ci trieda naozaj pokrýva funkcionalitu iba jedného aspektu/objektu reálneho sveta." />
  <rule ref="rulesets/java/codesize.xml/CyclomaticComplexity" showClassesComplexity="false" message="Znízte pocet: ''if'', ''while'', ''for'', ''case'' príkazov v rámci ''{0} {1}'' (zlozitost je {2} z 10)."/>
  <rule ref="rulesets/java/codesize.xml/TooManyFields" message="Trieda by nemala mat viac ako 14 dátových clenov." />
  <rule ref="rulesets/java/codesize.xml/TooManyMethods" message="Trieda by nemala mat viac ako 15 metód." maxmethods="15"/>

  <rule ref="rulesets/java/controversial.xml/AssignmentInOperand" message="Nepouzívajte priradenie hodnoty premenným, ktoré vystupujú ako operandy inej operácie (napr. 'if ((x = getX()) != 3)')." />

  <rule ref="rulesets/java/coupling.xml/CouplingBetweenObjects" message="V triede by sa nemalo pouzívat príliš veľa rozdielnych typov (20 a viac: dátové cleny, premenné, ''return'' príkazy), lebo to indikuje vysoký 'coupling'." />
  <rule ref="rulesets/java/coupling.xml/ExcessiveImports" message="Znízte pocet importov (nesmie ich byt viac ako 30)" />
  <rule ref="rulesets/java/coupling.xml/LooseCoupling" message="Pretypujte deklaráciu (namiesto typu ''{0}'' pouzite rozhranie, ktoré tento typ implementuje)."/>

  <rule ref="rulesets/java/design.xml/SwitchStmtsShouldHaveDefault" message="Pridajte do príkazu ''switch'' aj ''default:'' znacku." />
  <rule ref="rulesets/java/design.xml/AvoidDeeplyNestedIfStmts" message="Nepouzívajte viac ako dve vnorenia podmienky 'if..then'." />
  <rule ref="rulesets/java/design.xml/AvoidReassigningParameters" message="Vyhnite sa priradeniam hodnoty do parametra ''{0}'' - radšej si vytvorte novú lokálnu premennú." />
  <rule ref="rulesets/java/design.xml/DefaultLabelNotLastInSwitchStmt" message="Umiestnite znacku ''default:'' v príkaze ''switch'' ako poslednú." />
  <rule ref="rulesets/java/design.xml/NonCaseLabelInSwitchStatement" message="V príkaze ''switch'' nepouzívajte znacky bez kľúcového slova ''case''. Bud dopíšte ''case '' pred túto znacku, alebo ju úplne vyhodte." />
  <rule ref="rulesets/java/design.xml/EqualsNull" message="Nepouzívajte volanie ''obj.equals(null)'', ale klasické porovnanie (''obj == null'')." />
  <rule ref="rulesets/java/design.xml/IdempotentOperations" message="Nepouzívajte idempotentné operácie (ako napr. priradenie premennej samej sebe)."/>
  <rule ref="rulesets/java/design.xml/AssignmentToNonFinalStatic" message="Bud deklarujte statickú premennú ''{0}'' ako final, alebo sa vyhnite priradeniu jej hodnoty v konštruktore."/>
  <rule ref="rulesets/java/design.xml/MissingStaticMethodInNonInstantiatableClass" message="Do triedy doplňte bud verejný konštruktor, alebo statické metódy, pretoze teraz je táto trieda nepouziteľná." />
  <rule ref="rulesets/java/design.xml/MissingBreakInSwitch" message="V celom príkaze ''switch'' sa nenachádza ziadny príkaz ''break''."/>
  <rule ref="rulesets/java/design.xml/AvoidInstanceofChecksInCatchClause" message="Pri odchytení výnimky nepouzívajte operátor ''instanceof'' na zistenie, o akú výnimku ide. Radšej umiestnite kazdý typ výnimky do samostatného bloku ''catch''."/>
  <rule ref="rulesets/java/design.xml/SimplifyConditional" message="Vymazte kontrolu premennej na ''null'', ked pouzívate operátor ''instanceof'' (napr. 'if (x != null &amp;&amp; x instanceof X)')." />
  <rule ref="rulesets/java/design.xml/UnnecessaryLocalBeforeReturn" message="Vyhnite sa vytváraniu zbytocných lokálnych premenných, ako je napr. táto: ''int x = getX(); return x;''."/>
  <rule ref="rulesets/java/design.xml/AvoidConstantsInterface" message="Rozhranie musí obsahovat aj deklaráciu metód, nielen konštánt." />
  <rule ref="rulesets/java/design.xml/UseCollectionIsEmpty" message="Nahradte test 'obj.size() == 0' (príp. 'obj.size() != 0') volaním metódy 'obj.isEmpty()' na príslušnom objekte (kolekcii)." />
  <rule ref="rulesets/java/design.xml/EmptyMethodInAbstractClassShouldBeAbstract" message="Prázdna metóda v abstraktnej triede by mala byt abstraktná (doplňte kľúcové slovo ''abstract'' za modifikátor viditeľnosti a zmazte telo metódy)." />
  <rule ref="rulesets/java/design.xml/SingularField" message="Nahradte dátový clen ''{0}'' lokálnou premennou, pretoze sa pouzíva len v jedinej metóde." />
  <rule ref="rulesets/java/design.xml/AbstractClassWithoutAnyMethod" message="V abstraktnej triede nie je ziadna abstraktná metóda - doplňte aspoň jednu. Ak ste mali v úmysle iba zabránit moznosti vytvorit inštanciu triedy, pouzite radšej súkromný alebo chránený konštruktor." />
  <rule ref="rulesets/java/design.xml/TooFewBranchesForASwitchStatement" message="Príkaz ''switch'' s menej ako 3 vetvami je neefektívny, radšej ho zameňte za príkazy ''if''." />

  <rule ref="rulesets/java/empty.xml/EmptyCatchBlock" message="Vlozte nejaký príkaz na ošetrenie výnimky." />
  <rule ref="rulesets/java/empty.xml/EmptyIfStmt" message="Vyhnite sa prázdnym ''if'' príkazom (ak však máte napísaný kód iba pre negáciu tejto prázdnej podmienky - cez ''else'', tak túto podmienku radšej negujte takto: ''!(POVODNA_PODMIENKA)'' a presuňte kód tam)." />
  <rule ref="rulesets/java/empty.xml/EmptyWhileStmt" message="Vyhnite sa prázdnym ''while'' cyklom (v prípade, ze v podmienke robíte nieco uzitocné, presuňte to radšej do tela cyklu)." />
  <rule ref="rulesets/java/empty.xml/EmptyTryBlock" message="Vyhnite sa prázdnym ''try'' blokom (zmazte ho)." />
  <rule ref="rulesets/java/empty.xml/EmptyFinallyBlock" message="Vyhnite sa prázdnym ''finally'' blokom (zmazte ho alebo doplňte nejaký kód)." />
  <rule ref="rulesets/java/empty.xml/EmptyStatementNotInLoop" message="Zmazte prázdny príkaz (bodkociarka navyše, alebo osamote)." />

  <rule ref="rulesets/java/imports.xml/DuplicateImports" message="Vymazte tento duplicitný import: ''{0}''." />
  <rule ref="rulesets/java/imports.xml/DontImportJavaLang" message="Neimportujte nic z balícka 'java.lang' (všetky triedy z tohto balícka sú importované automaticky)." />
  <rule ref="rulesets/java/imports.xml/UnusedImports" message="Odstráňte tento nepouzitý import: ''{0}''."/>
  <rule ref="rulesets/java/imports.xml/ImportFromSamePackage" message="Neimportujte nic, co sa nachádza v tom istom balícku." />

  <rule ref="rulesets/java/junit.xml/JUnitStaticSuite" message="Metóda 'suite()' nie je verejná a statická zároveň, teda ju JUnit nebude akceptovat. Pridajte preto modifikátory ''public'' a ''static''." />
  <rule ref="rulesets/java/junit.xml/JUnitSpelling" message="Nesprávne ste napísali názov metódy frameworku JUnit ('setUp' alebo 'tearDown')." />
  <rule ref="rulesets/java/junit.xml/JUnitAssertionsShouldIncludeMessage" message="JUnit predpoklady (assertions) by mali mat ako prvý parameter nejakú textovú správu." />
  <rule ref="rulesets/java/junit.xml/JUnitTestsShouldIncludeAssert" message="JUnit testy by mali obsahovat aspoň jedno volanie metódy 'assert()' alebo 'fail()'." />
  <rule ref="rulesets/java/junit.xml/TestClassWithoutTestCases" message="Triedy, ktorých názov koncí na 'Test' sú chápané ako testovacie triedy. Táto trieda však neobahuje ziadne testovacie prípady (metódy zacínajúce na 'test')." />
  <rule ref="rulesets/java/junit.xml/UnnecessaryBooleanAssertion" message="Vymazte nepotrebný predpoklad: príkaz 'assertTrue(true)' alebo jemu podobný." />
  <rule ref="rulesets/java/junit.xml/UseAssertNullInsteadOfAssertTrue" message="Miesto príkazu 'assertTrue(x==null)', príp. 'assertFalse(x==null)', pouzite príkaz 'assertNull(x)', príp. 'assertNotNull(x)'." />
  <rule ref="rulesets/java/junit.xml/SimplifyBooleanAssertion" message="Príkaz 'assertTrue(!výraz)' nahradte lepším: 'assertFalse(výraz)'." />

  <rule ref="rulesets/java/naming.xml/LongVariable" message="Názov premennej ''{0}'' je príliš dlhý (musí mat menej ako 17 znakov)." />
  <rule ref="rulesets/java/naming.xml/ShortMethodName" message="Názov metódy je príliš krátky (musí mat viac ako 2 znaky)." />
  <rule ref="rulesets/java/naming.xml/VariableNamingConventions" message="{0} premenná ''{1}'' musí zacínat {2}." />
  <rule ref="rulesets/java/naming.xml/MethodNamingConventions" message="Názov metódy by mal vzdy zacínat malým písmenom, a nemal by obsahovat podtrzníky (_)." />
  <rule ref="rulesets/java/naming.xml/ClassNamingConventions" message="Názov triedy by mal vzdy zacínat veľkým písmenom." />
  <rule ref="rulesets/java/naming.xml/AbstractNaming" message="Názov abstraktných tried by mal mat formu: 'AbstractXXX'." />
  <rule ref="rulesets/java/naming.xml/AvoidDollarSigns" message="Nepouzívajte symbol dolára v názve premennej/metódy/triedy/rozhrania." />
  <rule ref="rulesets/java/naming.xml/MethodWithSameNameAsEnclosingClass" message="Trieda by nemala obsahovat metódy s rovnakým názvom ako názov triedy (okrem konštruktorov)." />
  <rule ref="rulesets/java/naming.xml/SuspiciousHashcodeMethodName" message="Názov metódy a jej návratový typ sa az príliš podobajú štandardnej metóde všetkých objektov s názvom 'hashCode()'. Bud ju takto pomenujte (cím pretazíte pôvodnú metódu), alebo lepšie zmeňte jej signatúru (stací názov)." />
  <rule ref="rulesets/java/naming.xml/SuspiciousConstantFieldName" message="Názov premennej nesmie byt zlozený len z veľkých písmen, ak sa nejedná o konštantu. Avšak ak ide o konštantu, deklarujte premennú ako ''final''." />
  <rule ref="rulesets/java/naming.xml/SuspiciousEqualsMethodName" message="Názov metódy, prípadne typ parametra sa az príliš podobajú na štandardnú metódu pre všetky objekty s názvom 'equals(Object)'. Bud ju takto pomenujte (cím pretazíte pôvodnú metódu), alebo lepšie zmeňte jej signatúru (stací názov)." />
  <rule ref="rulesets/java/naming.xml/AvoidFieldNameMatchingTypeName" message="Zmeňte pomenovanie dátového clena, aby sa nezhodoval s názvom triedy."/>
  <rule ref="rulesets/java/naming.xml/AvoidFieldNameMatchingMethodName" message="Zmeňte pomenovanie dátového clena, aby sa nezhodoval s názvom metódy."/>
  <rule ref="rulesets/java/naming.xml/NoPackage" message="Doplňte názov balícka na zaciatok súboru triedy/rozhrania (vlozte riadok ''package názov'', kde názov je cesta adresárov, v ktorých sa trieda/rozhranie nachádza)." />
  <rule ref="rulesets/java/naming.xml/PackageCase" message="Názov balícka nesmie obsahovat veľké písmená." />
  <rule ref="rulesets/java/naming.xml/MisleadingVariableName" message="Vymazte z premennej prefix 'm_' (tento sa väcšinou pouzíva len ako prefix pre názvy dátových clenov)." />
  <!--  <rule ref="rulesets/java/naming.xml/BooleanGetMethodName" /> -->

  <rule ref="rulesets/java/optimizations.xml/UnnecessaryWrapperObjectCreation" message="Táto typová konverzia sa dá zoptimalizovat ak vynecháte pomocný objekt, ktorý si vytvárate (napr. 'i = Integer.valueOf(s).intValue();' - toto vytvára zbytocný objekt; 'i = Integer.parseInt(s);' - toto je uz lepšie)." />
  <rule ref="rulesets/java/optimizations.xml/AddEmptyString" message="Na konverziu nepridávajte prázdny retazec (je to neefektívne, radšej to urobte cez volanie ''String.valueOf()'')."/>

  <rule ref="rulesets/java/strictexception.xml/ExceptionAsFlowControl" message="Nepouzívajte volania a zachytávanie výnimiek na riadenie toku programu (teda umelý 'goto' príkaz)." />
  <rule ref="rulesets/java/strictexception.xml/AvoidCatchingThrowable" message="Nepouzívajte odchytávanie výnimiek typu 'Throwable'." />
  <rule ref="rulesets/java/strictexception.xml/AvoidCatchingNPE" message="Nepouzívajte odchytávanie výnimky typu 'NullPointerException'; radšej skúste predíst tejto výnimke dodatocnou kontrolou." />
  <rule ref="rulesets/java/strictexception.xml/AvoidThrowingNullPointerException" message="Nehádzte výnimky typu 'NullPointerException', radšej miesto nej 'IllegalArgumentException'." />
  <rule ref="rulesets/java/strictexception.xml/AvoidRethrowingException" message="Nehádzte tú istú výnimku v 'catch' bloku." />
  <rule ref="rulesets/java/strictexception.xml/DoNotThrowExceptionInFinally" message="Nehádzte výnimky v bloku 'finally'." />
  <rule ref="rulesets/java/strictexception.xml/AvoidThrowingNewInstanceOfSameException" message="Nehádzte tú istú výnimku v 'catch' bloku (ani jej novú inštanciu)." />

  <rule ref="rulesets/java/strings.xml/AvoidDuplicateLiterals" message="Retazec {0} sa vyskytuje {1}-krát (viac ako 3; prvý výskyt: riadok {2}); deklarujte ho ako dátový clen typu ''final static String'' a pouzite takto definovanú premennú v kazdom výskyte retazca."/>
  <rule ref="rulesets/java/strings.xml/StringInstantiation" message="Nevytvárajte inštanciu objektu String priamo (''new String()''); obycajne je to zbytocné." />
  <rule ref="rulesets/java/strings.xml/StringToString" message="Nepouzívajte volanie ''toString()'' metódy na objektoch typu 'String'." />
  <rule ref="rulesets/java/strings.xml/UnnecessaryCaseChange" message="Volanie metódy ''equalsIgnoreCase()'' je lepšie ako volanie ''toUpperCase/toLowerCase().equals()''."  />
  <rule ref="rulesets/java/strings.xml/UseIndexOfChar" message="Miesto 'String.indexOf(''retazec'')' pouzite 'String.indexOf('znak')'." />
  <rule ref="rulesets/java/strings.xml/UselessStringValueOf" message="Nie je potrebné volat ''String.valueOf()'' na konverziu, ak tento objekt chcete pridat k retazcu." />
  <rule ref="rulesets/java/strings.xml/UseEqualsToCompareStrings" message="Pri porovnávaní retazcov volajte metódu ''equals()'' miesto pouzitia operátorov  ''=='', prípadne ''!=''." />

  <rule ref="rulesets/java/unusedcode.xml/UnusedLocalVariable" message="Vymazte nepouzitú lokálnu premennú ''{0}''."/>
  <rule ref="rulesets/java/unusedcode.xml/UnusedPrivateField" message="Vymazte nepouzitý dátový clen ''{0}''." />
  <rule ref="rulesets/java/unusedcode.xml/UnusedPrivateMethod" message="Vymazte nepouzitú (ani raz nikde nevolanú) súkromnú metódu: ''{0}''." />
  <rule ref="rulesets/java/unusedcode.xml/UnusedFormalParameter" message="Vymazte nepouzitý(é) parameter(tre) ''{1}'' v mieste: {0}."/>

  <rule ref="rulesets/java/unnecessary.xml/UnnecessaryConversionTemporary" message="Nepouzívajte docasnú premennú pri konvertovaní nejakého objektu na retazec (''String''). Stací túto konverziu napísat rovno za príkaz ''return''." />
  <rule ref="rulesets/java/unnecessary.xml/UnnecessaryReturn" message="Vymazte tento nepotrebný ''return'' príkaz." />
  <rule ref="rulesets/java/unnecessary.xml/UselessOverridingMethod" message="Pretazenie metódy je zbytocné, pretoze nerobí nic, iba volá svojho predka." />

</ruleset>
